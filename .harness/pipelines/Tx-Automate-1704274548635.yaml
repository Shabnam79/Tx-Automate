pipeline:
  identifier: Build_anujrajkumar_Tx_Automate_1704274618869
  name: DotNetPipeline
  orgIdentifier: default
  projectIdentifier: DotNetPipeline
  properties:
    ci:
      codebase:
        connectorRef: account.Github_OAuth_1704192628541
        repoName: anujrajkumar/Tx-Automate
        build: <+input>
        prCloneStrategy: SourceBranch
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Run
                  name: Build
                  identifier: Run_2
                  spec:
                    shell: Sh
                    command: |-
                      apt install ca-certificates gnupg
                      gpg --homedir /tmp --no-default-keyring --keyring /usr/share/keyrings/mono-official-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
                      echo "deb [signed-by=/usr/share/keyrings/mono-official-archive-keyring.gpg] https://download.mono-project.com/repo/ubuntu stable-focal main" | tee /etc/apt/sources.list.d/mono-official-stable.list
                      apt update
                      apt install mono-complete
                      mono --version

                      dotnet build MyAppT/MyAppT.csproj
                      dotnet publish --configuration Release --output ./published
                      zip -r published_artifacts.zip ./published
                      ls -ltr
                      find . -name '*.zip'
                      export ZipFileName=$(find . -name '*.zip')
                      echo "$ZipFileName"
                      nuget=$(find . -name '*.nupkg')
                      echo "$nuget"
                    outputVariables:
                      - name: ZipFileName
              - step:
                  type: Run
                  name: Test
                  identifier: Run_3
                  spec:
                    shell: Sh
                    command: |-
                      #cd .\TestingProject\ ; dotnet test
                      wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
                      sudo dpkg -i packages-microsoft-prod.deb
                      sudo apt-get update
                      sudo apt-get install -y dotnet-sdk-5.0
                      dotnet --version
                      dotnet test TestingProject/TestingProject.csproj --logger "trx;LogFileName=testresults.trx" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "Code coverage" /p:CoverletOutput=TestResults/Coverage/
                      echo "<+pipeline.stages.build.spec.execution.steps.Run_2.output.outputVariables.ZipFileName>"
              - step:
                  type: ArtifactoryUpload
                  name: ArtifactoryUpload_1
                  identifier: ArtifactoryUpload_1
                  spec:
                    connectorRef: jfrog
                    target: harness-artifact-dev/
                    sourcePath: ./published_artifacts.zip
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        type: CI
        delegateSelectors:
          - windows-amd64
          - docker-delegate
        description: ""
