# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- none

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: 'restore'
        projects: '**/MyAppT.csproj'
      
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '**/MyAppT.csproj'
        arguments: '--configuration $(BuildConfiguration)'
        
    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: 'test'
        projects: 'TestingProject/TestingProject.csproj'
        publishTestResults: true
        arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "Code coverage" /p:CoverletOutput=$(Build.SourcesDirectory)\TestResults\Coverage\ '
      continueOnError: true  
    - task: reportgenerator@5
      inputs:
        reports: 'TestResults\Coverage\coverage.cobertura.xml'
        targetdir: 'coveragereport'
    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '**/*cobertura.xml'
    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
        zipAfterPublish: True

    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact (MyAppT.zip)
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'       