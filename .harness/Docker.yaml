pipeline:
  name: Docker
  identifier: Docker
  projectIdentifier: DotNetPipeline
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github_OAuth_1704192628541
        repoName: anujrajkumar/Tx-Automate
        build: <+input>
  stages:
    - stage:
        name: Docker_Build
        identifier: Docker_Build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: BuildAndPushDockerRegistry
                  name: BuildAndPushDockerRegistry
                  identifier: BuildAndPushDockerRegistry
                  spec:
                    connectorRef: account.harnessImage
                    repo: anuj730/harness-repo
                    tags:
                      - latest
                    dockerfile: ./MyAppT/Dockerfile
    - stage:
        name: Docker_Deploy
        identifier: Docker_Deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: k8sdeploy
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  artifacts:
                    primary:
                      primaryArtifactRef: <+input>
                      sources: <+input>
          environment:
            environmentRef: k8s
            deployToAll: false
            infrastructureDefinitions:
              - identifier: deploy
          execution:
            steps:
              - step:
                  type: K8sApply
                  name: K8sApply_1
                  identifier: K8sApply_1
                  spec:
                    skipDryRun: false
                    skipSteadyStateCheck: false
                    skipRendering: false
                    overrides: []
                    filePaths:
                      - ./deployment.yaml
                  timeout: 10m
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
